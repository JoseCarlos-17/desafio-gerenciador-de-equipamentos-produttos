{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-select\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"option\", {\n  class: \"placeholder\",\n  value: \"\",\n  disabled: \"\",\n  selected: \"\"\n}, \" Select your option \", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_form, {\n    id: \"equipment-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n      class: \"form-item\",\n      modelValue: $data.equipment.name,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.equipment.name = $event),\n      label: \"Name\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n      class: \"form-item\",\n      modelValue: $data.equipment.brand,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.equipment.brand = $event),\n      label: \"Brand\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n      class: \"form-item\",\n      modelValue: $data.equipment.code,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.equipment.code = $event),\n      label: \"Code\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n      class: \"form-item\",\n      modelValue: $data.equipment.equipment_type,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.equipment.equipment_type = $event),\n      items: $data.equipmentOptions,\n      \"item-text\": \"key\",\n      \"item-value\": \"id\",\n      label: \"Type\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createCommentVNode(\" <v-file-input\\n        v-model=\\\"equipment.equipment_photo\\\"\\n        label=\\\"Photo\\\"\\n        outlined\\n        dense\\n      ></v-file-input> \"), _createVNode(_component_v_text_field, {\n      class: \"form-item\",\n      modelValue: $data.equipment.note,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.equipment.note = $event),\n      label: \"Note\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"select\", {\n      class: \"form-item\",\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.equipment.local_id = $event)\n    }, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.localOptions, localOption => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        value: localOption.id,\n        key: localOption.id\n      }, _toDisplayString(localOption.name), 9 /* TEXT, PROPS */, _hoisted_3);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.equipment.local_id]])]), _createVNode(_component_v_btn, {\n      onClick: _cache[6] || (_cache[6] = $event => this.$route.params.id ? $options.editEquipment() : $options.createEquipment())\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($options.changeButtonName), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;EA+BWA,KAAK,EAAC;AAAa;gCAEpBC,oBAES;EAFDD,KAAK,EAAC,aAAa;EAACE,KAAK,EAAC,EAAE;EAACC,QAAQ,EAAR,EAAQ;EAACC,QAAQ,EAAR;GAAS,sBAEvD;;;;;;;uBAlCRC,oBA8CM,cA7CJC,aA4CSC;IA5CDC,EAAE,EAAC;EAAgB;sBACzB,MAEe,CAFfF,aAEeG;MAFDT,KAAK,EAAC,WAAW;kBACRU,eAAS,CAACC,IAAI;iEAAdD,eAAS,CAACC,IAAI;MAAEC,KAAK,EAAC;6CAG7CN,aAEeG;MAFDT,KAAK,EAAC,WAAW;kBACRU,eAAS,CAACG,KAAK;iEAAfH,eAAS,CAACG,KAAK;MAAED,KAAK,EAAC;6CAG9CN,aAEeG;MAFDT,KAAK,EAAC,WAAW;kBACRU,eAAS,CAACI,IAAI;iEAAdJ,eAAS,CAACI,IAAI;MAAEF,KAAK,EAAC;6CAG7CN,aAG0CS;MAHhCf,KAAK,EAAC,WAAW;kBAChBU,eAAS,CAACM,cAAc;iEAAxBN,eAAS,CAACM,cAAc;MAChCC,KAAK,EAAEP,sBAAgB;MAAE,WAAS,EAAC,KAAK;MACzC,YAAU,EAAC,IAAI;MAACE,KAAK,EAAC;sDAExBM,uKAKoB,EAEpBZ,aAEeG;MAFDT,KAAK,EAAC,WAAW;kBACRU,eAAS,CAACS,IAAI;iEAAdT,eAAS,CAACS,IAAI;MAAEP,KAAK,EAAC;6CAG7CX,oBAUM,OAVNmB,UAUM,mBATJnB,oBAQS;MARDD,KAAK,EAAC,WAAW;iEAAUU,eAAS,CAACW,QAAQ;QACnDC,UAES,qBACTjB,oBAGSkB,6BAHqBb,kBAAY,EAA3Bc,WAAW;2BAA1BnB,oBAGS;QAFAH,KAAK,EAAEsB,WAAW,CAAChB,EAAE;QAAGiB,GAAG,EAAED,WAAW,CAAChB;0BAC9CgB,WAAW,CAACb,IAAI;6EANaD,eAAS,CAACW,QAAQ,OAWvDf,aAEQoB;MAFAC,OAAK,2CAAOC,MAAM,CAACC,MAAM,CAACrB,EAAE,GAAGsB,sBAAa,KAAKA,wBAAe;;wBACtE,MAAsB,mCAAnBA,yBAAgB","names":["class","_createElementVNode","value","disabled","selected","_createElementBlock","_createVNode","_component_v_form","id","_component_v_text_field","$data","name","label","brand","code","_component_v_select","equipment_type","items","_createCommentVNode","note","_hoisted_1","local_id","_hoisted_2","_Fragment","localOption","key","_component_v_btn","onClick","$route","params","$options"],"sourceRoot":"","sources":["/home/jose-carlos/Documentos/Projetos/desafio-gest√£o-de-equipamentos-produttos/versao-frontend/src/components/equipmentform/EquipmentForm.vue"],"sourcesContent":["<template lang=\"\">\n  <div>\n    <v-form id=\"equipment-form\">\n      <v-text-field class=\"form-item\"\n                    v-model=\"equipment.name\" label=\"Name\">\n      </v-text-field>\n\n      <v-text-field class=\"form-item\"\n                    v-model=\"equipment.brand\" label=\"Brand\">\n      </v-text-field>\n\n      <v-text-field class=\"form-item\"\n                    v-model=\"equipment.code\" label=\"Code\">\n      </v-text-field>\n\n      <v-select class=\"form-item\"\n        v-model=\"equipment.equipment_type\"\n        :items=\"equipmentOptions\" item-text=\"key\"\n        item-value=\"id\" label=\"Type\"></v-select>\n\n      <!-- <v-file-input\n        v-model=\"equipment.equipment_photo\"\n        label=\"Photo\"\n        outlined\n        dense\n      ></v-file-input> -->\n    \n      <v-text-field class=\"form-item\"\n                    v-model=\"equipment.note\" label=\"Note\">\n      </v-text-field>\n      \n      <div class=\"form-select\">\n        <select class=\"form-item\" v-model=\"equipment.local_id\">\n          <option class=\"placeholder\" value=\"\" disabled selected>\n            Select your option\n          </option>\n          <option v-for=\"localOption in localOptions\"\n                  :value=\"localOption.id\" :key=\"localOption.id\">\n            {{localOption.name}}\n          </option>\n        </select>\n      </div>\n\n      <v-btn @click=\"this.$route.params.id ? editEquipment() : createEquipment()\">\n        {{ changeButtonName }}\n      </v-btn>\n    </v-form>\n  </div>\n</template>\n<script>\n  import api_instance from '@/main';\n\nexport default {\n  data() {\n      return {\n        equipmentOptions: [],\n        localOptions: [],\n        equipment: {\n          name: '',\n          brand: '',\n          equipment_type: '',\n          equipment_photo: '',\n          code: '',\n          note: '',\n          local_id: '' \n        }\n      }\n    },\n\n  methods: {\n      createEquipment () {\n        api_instance.post('/equipment', { equipment: this.equipment })\n                    .then(() => this.$router.push('/'))\n      },\n\n      loadEquipmentOptions () {\n        api_instance.get('/equipment/equipment_type_options')\n                    .then(response => {\n          this.equipmentOptions = response.data.map(item => item.key)\n        })\n      },\n\n      loadLocationsOptions () {\n        api_instance.get('/locations').then(response => {\n          this.localOptions = response.data\n        })\n      },\n\n      loadEditForm () {\n        if (this.$route.params.id) {\n          api_instance.get(`/equipment/${this.$route.params.id}`).then(response => {\n            this.equipment = {\n              name: response.data.name,\n              brand: response.data.brand,\n              equipment_type: response.data.equipment_type,\n              // equipment_photo: response.data.equipment_photo,\n              code: response.data.code,\n              note: response.data.note,\n              local_id: response.data.local.id\n            }\n          })\n        } else {\n          this.equipment = {\n            name: '',\n            brand: '',\n            equipment_type: '',\n            // equipment_photo: '',\n            code: '',\n            note: '',\n            local_id: '' \n          }\n        }\n      },\n\n      editEquipment () {\n        api_instance.put(`/equipment/${this.$route.params.id}`, { equipment: this.equipment })\n                    .then(() => this.$router.push('/'))\n      }\n    },\n\n    computed: {\n      changeButtonName () {\n        return this.$route.params.id ? 'Edit Equipment' : 'Create Equipment'\n      }\n    },\n\n    mounted () {\n      this.loadEquipmentOptions()\n      this.loadLocationsOptions()\n      this.loadEditForm()\n    }\n}\n</script>\n<style>\n  #equipment-form {\n    margin: 20px 0px 20px 0px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  #equipment-form > .form-item {\n    width: 500px !important;\n  }\n\n  #equipment-form > .form-select > select {\n    border-bottom: 1px solid rgba(128, 128, 128, 0.788);\n    padding: 10px;\n    color: rgba(0, 0, 0, 0.856);\n    width: 500px !important;\n    margin: 10px 0px 20px 0px;\n    background-color: rgba(224, 224, 224, 0.473);\n    opacity: 0.9;\n  }\n\n  #equipment-form > .form-select > .form-item > .placeholder {\n    color: rgba(0, 0, 0, 0.856) !important;\n\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}