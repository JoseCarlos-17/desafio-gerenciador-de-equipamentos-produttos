{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"EquipmentListComponent\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_v_list, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.equipmentList, equipment => {\n      return _openBlock(), _createBlock(_component_v_list_item, {\n        key: equipment.id\n      });\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";gCAEMA,oBAA+B,YAA3B,wBAAsB;;;;;uBAD9BC,oBAOM,cANFC,UAA+B,EAC/BC,aAGSC;sBAFM,MAAkC,oBAA/CH,oBACcI,6BADmBC,mBAAa,EAA1BC,SAAS;2BAA7BC,aACcC;QADmCC,GAAG,EAAEH,SAAS,CAACI","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_v_list","_Fragment","$data","equipment","_createBlock","_component_v_list_item","key","id"],"sourceRoot":"","sources":["/home/jose-carlos/Documentos/Projetos/desafio-gest√£o-de-equipamentos-produttos/versao-frontend/src/components/equipmentlist/EquipamentList.vue"],"sourcesContent":["<template lang=\"\">\n  <div>\n      <h1>EquipmentListComponent</h1>\n      <v-list>\n        <v-list-item v-for=\"equipment in equipmentList\" :key=\"equipment.id\">\n        </v-list-item>\n      </v-list>\n     \n  </div>\n</template>\n\n<script>\nimport api_instance from '@/main';\n\nexport default {\n  data() {\n      return {\n        equipmentList: ''\n      }\n    },\n\n    methods: {\n      loadEquipment () {\n        api_instance.get('/equipment').then(response => {\n          this.equipmentList = response.data\n\n        })\n      }\n    },\n\n    mounted () {\n      this.loadEquipment()\n    }\n}\n</script>\n\n<style>\n\n  ul {\n    list-style: none;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}