{"ast":null,"code":"import api_instance from '@/main';\nexport default {\n  data() {\n    return {\n      equipmentOptions: [],\n      equipment: {\n        name: '',\n        brand: '',\n        equipment_type: {\n          id: 0,\n          key: \"air_conditioner\"\n        },\n        equipment_photo: '',\n        code: '',\n        note: ''\n      }\n    };\n  },\n  methods: {\n    createEquipment() {\n      api_instance.post('/equipment', {\n        equipment: this.equipment\n      }).then(response => {\n        response;\n      });\n    },\n    loadEquipmentOptions() {\n      api_instance.get('/equipment/equipment_type_options').then(response => {\n        this.equipmentOptions = response.data.map(item => item.key);\n      });\n    }\n  },\n  mounted() {\n    this.loadEquipmentOptions();\n    console.log(this.equipment);\n  }\n};","map":{"version":3,"mappings":"AAqDE,OAAOA,YAAW,MAAO,QAAQ;AAEnC,eAAe;EACbC,IAAI,GAAG;IACH,OAAO;MACLC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,cAAc,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAkB,CAAC;QACjDC,eAAe,EAAE,EAAE;QACnBC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAEHC,OAAO,EAAE;IACLC,eAAc,GAAK;MACjBb,YAAY,CAACc,IAAI,CAAC,YAAY,EAAE;QAAEX,SAAS,EAAE,IAAI,CAACA;MAAU,CAAC,EAChDY,IAAI,CAACC,QAAO,IAAK;QAACA,QAAQ;MAAA,CAAC;IAC1C,CAAC;IAEDC,oBAAmB,GAAK;MACtBjB,YAAY,CAACkB,GAAG,CAAC,mCAAmC,CAAC,CAACH,IAAI,CAACC,QAAO,IAAK;QACrE,IAAI,CAACd,gBAAe,GAAIc,QAAQ,CAACf,IAAI,CAACkB,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACZ,GAAG;MAC5D,CAAC;IACH;EACF,CAAC;EAEDa,OAAM,GAAK;IACT,IAAI,CAACJ,oBAAoB,EAAC;IAC1BK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,SAAS;EAC5B;AACJ","names":["api_instance","data","equipmentOptions","equipment","name","brand","equipment_type","id","key","equipment_photo","code","note","methods","createEquipment","post","then","response","loadEquipmentOptions","get","map","item","mounted","console","log"],"sourceRoot":"","sources":["/home/jose-carlos/Documentos/Projetos/desafio-gest√£o-de-equipamentos-produttos/versao-frontend/src/components/equipmentform/EquipmentForm.vue"],"sourcesContent":["<template lang=\"\">\n  <div>\n    <v-form>\n      <v-container>\n        <v-row>\n          <v-col\n            cols=\"auto\"\n            md=\"6\">\n            <v-text-field\n              v-model=\"equipment.name\"\n              :counter=\"10\"\n              label=\"Name\"\n              required></v-text-field>\n\n            <v-text-field\n              v-model=\"equipment.brand\"\n              :counter=\"10\"\n              label=\"Brand\"\n              required></v-text-field>\n\n            <v-text-field\n              v-model=\"equipment.code\"\n              label=\"Code\"\n              required></v-text-field>\n\n              <v-select\n                v-model=\"equipment.equipment_type\"\n                :items=\"equipmentOptions\"\n                item-text=\"id\"\n                item-value=\"key\"\n                label=\"Type\"\n              ></v-select>\n\n              <v-file-input\n                v-model=\"equipment.equipment_photo\"\n                label=\"Photo\"\n                truncate-length=\"16\"\n                required\n              ></v-file-input>\n            \n            <v-text-field\n              v-model=\"equipment.note\"\n              label=\"Code\"\n              required></v-text-field>\n\n            <v-btn @click=\"createEquipment()\"></v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-form>\n  </div>\n</template>\n<script>\n  import api_instance from '@/main';\n\nexport default {\n  data() {\n      return {\n        equipmentOptions: [], \n        equipment: {\n          name: '',\n          brand: '',\n          equipment_type: { id: 0, key: \"air_conditioner\" },\n          equipment_photo: '',\n          code: '',\n          note: ''\n        }\n      }\n    },\n\n  methods: {\n      createEquipment () {\n        api_instance.post('/equipment', { equipment: this.equipment })\n                    .then(response => {response})\n      },\n\n      loadEquipmentOptions () {\n        api_instance.get('/equipment/equipment_type_options').then(response => {\n          this.equipmentOptions = response.data.map(item => item.key)\n        })\n      }\n    },\n\n    mounted () {\n      this.loadEquipmentOptions()\n      console.log(this.equipment)\n    }\n}\n</script>\n<style lang=\"\">\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}