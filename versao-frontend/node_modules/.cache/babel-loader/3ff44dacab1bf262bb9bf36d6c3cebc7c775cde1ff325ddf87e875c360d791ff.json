{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EquipmentForm = _resolveComponent(\"EquipmentForm\", true);\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_EquipmentForm, {\n    equipmentOptions: $data.equipmentOptions,\n    localOptions: $data.localOptions,\n    equipment: $data.equipment,\n    loadEquipmentOptions: $options.loadEquipmentOptions,\n    loadLocationsOptions: $options.loadLocationsOptions,\n    createEquipment: $options.createEquipment,\n    loadEditForm: $options.loadEditForm,\n    handleFileUpload: $options.handleFileUpload,\n    editEquipment: $options.editEquipment,\n    changeButtonName: $options.changeButtonName\n  }, null, 8 /* PROPS */, [\"equipmentOptions\", \"localOptions\", \"equipment\", \"loadEquipmentOptions\", \"loadLocationsOptions\", \"createEquipment\", \"loadEditForm\", \"handleFileUpload\", \"editEquipment\", \"changeButtonName\"])]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAaM,cAZJC,aAWgBC;IAVbC,gBAAgB,EAAEC,sBAAgB;IAClCC,YAAY,EAAED,kBAAY;IAC1BE,SAAS,EAAEF,eAAS;IACpBG,oBAAoB,EAAEC,6BAAoB;IAC1CC,oBAAoB,EAAED,6BAAoB;IAC1CE,eAAe,EAAEF,wBAAe;IAChCG,YAAY,EAAEH,qBAAY;IAC1BI,gBAAgB,EAAEJ,yBAAgB;IAClCK,aAAa,EAAEL,sBAAa;IAC5BM,gBAAgB,EAAEN","names":["_createElementBlock","_createVNode","_component_EquipmentForm","equipmentOptions","$data","localOptions","equipment","loadEquipmentOptions","$options","loadLocationsOptions","createEquipment","loadEditForm","handleFileUpload","editEquipment","changeButtonName"],"sourceRoot":"","sources":["/home/jose-carlos/Documentos/Projetos/desafio-gest√£o-de-equipamentos-produttos/versao-frontend/src/screens/equipmentform/EquipmentForm.vue"],"sourcesContent":["<template>\n  <div>\n    <EquipmentForm\n      :equipmentOptions=\"equipmentOptions\"\n      :localOptions=\"localOptions\"\n      :equipment=\"equipment\"\n      :loadEquipmentOptions=\"loadEquipmentOptions\"\n      :loadLocationsOptions=\"loadLocationsOptions\"\n      :createEquipment=\"createEquipment\"\n      :loadEditForm=\"loadEditForm\"\n      :handleFileUpload=\"handleFileUpload\"\n      :editEquipment=\"editEquipment\"\n      :changeButtonName=\"changeButtonName\">\n    </EquipmentForm>\n  </div>\n</template>\n\n<script>\n  import api_instance from '@/main';\n  import EquipmentForm from '../../components/equipmentform/EquipmentForm.vue'\n  export default {\n    components: {\n      EquipmentForm\n    },\n\n    data() {\n      return {\n        equipmentOptions: [],\n        localOptions: [],\n        equipment: {\n          name: '',\n          brand: '',\n          equipment_type: '',\n          equipment_photo: '',\n          code: '',\n          note: '',\n          local_id: '' \n        }\n      }\n    },\n\n  methods: {\n      loadEquipmentOptions () {\n        api_instance.get('/equipment/equipment_type_options')\n                    .then(response => {\n          this.equipmentOptions = response.data.map(item => item.key)\n        })\n      },\n\n      loadLocationsOptions () {\n        api_instance.get('/locations').then(response => {\n          this.localOptions = response.data\n        })\n      },\n\n      createEquipment () {\n        api_instance.post('/equipment', { equipment: this.equipment }, {\n          headers: {\n              'Content-Type': 'multipart/form-data'\n          }\n        }).then(() => this.$router.push('/'))\n      },\n\n      loadEditForm () {\n        let headers = { headers: { 'Content-Type': 'multipart/form-data' } }\n\n        if (this.$route.params.id) {\n          api_instance.get(`/equipment/${this.$route.params.id}`, headers).then(response => {\n              \n              this.equipment = {\n                name: response.data.name,\n                brand: response.data.brand,\n                equipment_type: response.data.equipment_type,\n                equipment_photo: response.data.equipment_photo,\n                code: response.data.code,\n                note: response.data.note,\n                local_id: response.data.local.id\n              }\n            }) } else {\n              this.equipment = {\n                name: '',\n                brand: '',\n                equipment_type: '',\n                equipment_photo: '',\n                code: '',\n                note: '',\n                local_id: '' \n              }\n            }\n      },\n\n      handleFileUpload(){\n        this.equipment.equipment_photo = this.$refs.file.files[0]\n      },\n\n      editEquipment () {\n        api_instance.put(`/equipment/${this.$route.params.id}`, { equipment: this.equipment })\n                    .then(() => this.$router.push('/'))\n      }\n    },\n\n    computed: {\n      changeButtonName () {\n        return this.$route.params.id ? 'Edit Equipment' : 'Create Equipment'\n      }\n    },\n\n    mounted () {\n      this.loadEquipmentOptions()\n      this.loadLocationsOptions()\n      this.loadEditForm()\n    }\n  }\n</script>\n\n<style>\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}