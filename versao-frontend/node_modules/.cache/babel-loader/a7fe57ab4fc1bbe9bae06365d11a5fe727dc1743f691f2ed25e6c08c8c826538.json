{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EquipmentForm from '../../components/equipmentform/EquipmentForm.vue';\nexport default {\n  components: {\n    EquipmentForm\n  },\n  data() {\n    return {\n      equipmentOptions: [],\n      localOptions: [],\n      equipment: {\n        name: '',\n        brand: '',\n        equipment_type: '',\n        equipment_photo: '',\n        code: '',\n        note: '',\n        local_id: ''\n      }\n    };\n  },\n  methods: {\n    loadEquipmentOptions() {\n      api_instance.get('/equipment/equipment_type_options').then(response => {\n        this.equipmentOptions = response.data.map(item => item.key);\n      });\n    },\n    loadLocationsOptions() {\n      api_instance.get('/locations').then(response => {\n        this.localOptions = response.data;\n      });\n    },\n    createEquipment() {\n      api_instance.post('/equipment', {\n        equipment: this.equipment\n      }, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(() => this.$router.push('/'));\n    },\n    loadEditForm() {\n      let headers = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      if (this.$route.params.id) {\n        api_instance.get(`/equipment/${this.$route.params.id}`, headers).then(response => {\n          let data = new FormData();\n          this.equipment = {\n            name: response.data.name,\n            brand: response.data.brand,\n            equipment_type: response.data.equipment_type,\n            equipment_photo: data.append('equipment_photo', this.equipment_photo),\n            code: response.data.code,\n            note: response.data.note,\n            local_id: response.data.local.id\n          };\n        });\n      } else {\n        this.equipment = {\n          name: '',\n          brand: '',\n          equipment_type: '',\n          equipment_photo: '',\n          code: '',\n          note: '',\n          local_id: ''\n        };\n      }\n    },\n    handleFileUpload() {\n      this.equipment.equipment_photo = this.$refs.file.files[0];\n    },\n    editEquipment() {\n      api_instance.put(`/equipment/${this.$route.params.id}`, {\n        equipment: this.equipment\n      }).then(() => this.$router.push('/'));\n    }\n  },\n  computed: {\n    changeButtonName() {\n      return this.$route.params.id ? 'Edit Equipment' : 'Create Equipment';\n    }\n  },\n  mounted() {\n    this.loadEquipmentOptions();\n    this.loadLocationsOptions();\n    this.loadEditForm();\n  }\n};","map":{"version":3,"mappings":"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","names":["EquipmentForm","components","data","equipmentOptions","localOptions","equipment","name","brand","equipment_type","equipment_photo","code","note","local_id","methods","loadEquipmentOptions","api_instance","get","then","response","map","item","key","loadLocationsOptions","createEquipment","post","headers","$router","push","loadEditForm","$route","params","id","FormData","append","local","handleFileUpload","$refs","file","files","editEquipment","put","computed","changeButtonName","mounted"],"sourceRoot":"","sources":["/home/jose-carlos/Documentos/Projetos/desafio-gest√£o-de-equipamentos-produttos/versao-frontend/src/screens/equipmentform/EquipmentForm.vue"],"sourcesContent":["<template>\n  <div>\n    <EquipmentForm>\n\n    </EquipmentForm>\n  </div>\n</template>\n\n<script>\n  import EquipmentForm from '../../components/equipmentform/EquipmentForm.vue'\n  export default {\n    components: {\n      EquipmentForm\n    },\n\n    data() {\n      return {\n        equipmentOptions: [],\n        localOptions: [],\n        equipment: {\n          name: '',\n          brand: '',\n          equipment_type: '',\n          equipment_photo: '',\n          code: '',\n          note: '',\n          local_id: '' \n        }\n      }\n    },\n\n  methods: {\n      loadEquipmentOptions () {\n        api_instance.get('/equipment/equipment_type_options')\n                    .then(response => {\n          this.equipmentOptions = response.data.map(item => item.key)\n        })\n      },\n\n      loadLocationsOptions () {\n        api_instance.get('/locations').then(response => {\n          this.localOptions = response.data\n        })\n      },\n\n      createEquipment () {\n        api_instance.post('/equipment', { equipment: this.equipment }, {\n          headers: {\n              'Content-Type': 'multipart/form-data'\n          }\n        }).then(() => this.$router.push('/'))\n      },\n\n      loadEditForm () {\n        let headers = { headers: { 'Content-Type': 'multipart/form-data' } }\n\n        if (this.$route.params.id) {\n          api_instance.get(`/equipment/${this.$route.params.id}`, headers).then(response => {\n              let data = new FormData()\n              \n              this.equipment = {\n                name: response.data.name,\n                brand: response.data.brand,\n                equipment_type: response.data.equipment_type,\n                equipment_photo: data.append('equipment_photo', this.equipment_photo),\n                code: response.data.code,\n                note: response.data.note,\n                local_id: response.data.local.id\n              }\n            }) } else {\n              this.equipment = {\n                name: '',\n                brand: '',\n                equipment_type: '',\n                equipment_photo: '',\n                code: '',\n                note: '',\n                local_id: '' \n              }\n            }\n      },\n\n      handleFileUpload(){\n        this.equipment.equipment_photo = this.$refs.file.files[0]\n      },\n\n      editEquipment () {\n        api_instance.put(`/equipment/${this.$route.params.id}`, { equipment: this.equipment })\n                    .then(() => this.$router.push('/'))\n      }\n    },\n\n    computed: {\n      changeButtonName () {\n        return this.$route.params.id ? 'Edit Equipment' : 'Create Equipment'\n      }\n    },\n\n    mounted () {\n      this.loadEquipmentOptions()\n      this.loadLocationsOptions()\n      this.loadEditForm()\n    }\n  }\n</script>\n\n<style>\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}